{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo, useState } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react'; // type MyProps = { };\n// type MyState = { };\n// class Input extends React.Component<MyProps, MyState> {\n//   public state: MyState;\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     const initialState = [{type: 'paragraph', children: [{ text: \"edit me\"}]}]\n//     const editor = useMemo( () => withReact(createEditor()), [])\n//     const [value, setValue] = useState(initialState)\n//     // <span className={styles.Editor} contentEditable=\"true\"></span>\n//     return (\n//       <section className={styles.Container}>\n//         <Slate editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n//           <Editable />\n//         </Slate>\n//         <span className={styles.Hint}>Send A Message...</span>\n//       </section>\n//     );\n//   }\n// }\n\nvar Input = function Input() {\n  var initialState = [{\n    type: 'paragraph',\n    children: [{\n      text: \"edit me\"\n    }]\n  }];\n  var editor = useMemo(function () {\n    return withReact(createEditor());\n  }, []);\n\n  var _useState = useState(initialState),\n      value = _useState[0],\n      setValue = _useState[1]; // <span className={styles.Editor} contentEditable=\"true\"></span>\n\n\n  return __jsx(\"section\", {\n    className: styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(newVal) {\n      return setValue(newVal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Editable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    className: styles.Hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Send A Message...\"));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Editor.tsx"],"names":["React","useMemo","useState","createEditor","Slate","Editable","withReact","Input","initialState","type","children","text","editor","value","setValue","styles","Container","newVal","Hint"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAA9B,GAAD,CAArB;AACE,MAAMC,MAAM,GAAGX,OAAO,CAAE;AAAA,WAAMK,SAAS,CAACH,YAAY,EAAb,CAAf;AAAA,GAAF,EAAmC,EAAnC,CAAtB;;AAFc,kBAGYD,QAAQ,CAACM,YAAD,CAHpB;AAAA,MAGPK,KAHO;AAAA,MAGAC,QAHA,iBAId;;;AACA,SACE;AAAS,IAAA,SAAS,EAAEC,MAAM,CAACC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,MAAf;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAqC,IAAA,QAAQ,EAAE,kBAAAI,MAAM;AAAA,aAAIH,QAAQ,CAACG,MAAD,CAAZ;AAAA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAEF,MAAM,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF;AAQH,CAbD;;AAcA,eAAeX,KAAf","sourcesContent":["import React, {useMemo, useState} from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\n// type MyProps = { };\n// type MyState = { };\n// class Input extends React.Component<MyProps, MyState> {\n//   public state: MyState;\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     const initialState = [{type: 'paragraph', children: [{ text: \"edit me\"}]}]\n//     const editor = useMemo( () => withReact(createEditor()), [])\n//     const [value, setValue] = useState(initialState)\n//     // <span className={styles.Editor} contentEditable=\"true\"></span>\n//     return (\n//       <section className={styles.Container}>\n//         <Slate editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n//           <Editable />\n//         </Slate>\n//         <span className={styles.Hint}>Send A Message...</span>\n//       </section>\n//     );\n//   }\n// }\n\nlet Input = () => {\n  const initialState = [{type: 'paragraph', children: [{ text: \"edit me\"}]}]\n    const editor = useMemo( () => withReact(createEditor()), [])\n    const [value, setValue] = useState(initialState)\n    // <span className={styles.Editor} contentEditable=\"true\"></span>\n    return (\n      <section className={styles.Container}>\n        <Slate editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n          <Editable />\n        </Slate>\n        <span className={styles.Hint}>Send A Message...</span>\n      </section>\n    );\n}\nexport default Input;"]},"metadata":{},"sourceType":"module"}