{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo, useState } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport styles from './../Style/Components/Editor.module.css';\n\nlet Input = () => {\n  const initialState = [{\n    type: 'paragraph',\n    children: [{\n      text: \"edit me\"\n    }]\n  }];\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialState); // <span className={styles.Editor} contentEditable=\"true\"></span>\n\n  return __jsx(\"section\", {\n    className: styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: newVal => setValue(newVal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Editable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    className: styles.Hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Send A Message...\"));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Editor.tsx"],"names":["React","useMemo","useState","createEditor","Slate","Editable","withReact","styles","Input","initialState","type","children","text","editor","value","setValue","Container","newVal","Hint"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AAEA,OAAOC,MAAP,MAAmB,yCAAnB;;AAEA,IAAIC,KAAK,GAAG,MAAM;AAChB,QAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAA9B,GAAD,CAArB;AACA,QAAMC,MAAM,GAAGZ,OAAO,CAAE,MAAMK,SAAS,CAACH,YAAY,EAAb,CAAjB,EAAmC,EAAnC,CAAtB;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAACO,YAAD,CAAlC,CAHgB,CAIhB;;AACA,SACE;AAAS,IAAA,SAAS,EAAEF,MAAM,CAACS,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEH,MAAf;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAqC,IAAA,QAAQ,EAAEG,MAAM,IAAIF,QAAQ,CAACE,MAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAEV,MAAM,CAACW,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF;AAQD,CAbD;;AAcA,eAAeV,KAAf","sourcesContent":["import React, {useMemo, useState} from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\nimport styles from './../Style/Components/Editor.module.css';\n\nlet Input = () => {\n  const initialState = [{type: 'paragraph', children: [{ text: \"edit me\"}]}]\n  const editor = useMemo( () => withReact(createEditor()), [])\n  const [value, setValue] = useState(initialState)\n  // <span className={styles.Editor} contentEditable=\"true\"></span>\n  return (\n    <section className={styles.Container}>\n      <Slate editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n        <Editable />\n      </Slate>\n      <span className={styles.Hint}>Send A Message...</span>\n    </section>\n  );\n}\nexport default Input;"]},"metadata":{},"sourceType":"module"}