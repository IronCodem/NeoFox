{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Messages.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './../Style/Components/Messages.module.css';\nimport { firestore } from './../Scripts/Firebase';\nimport Message from './Message';\n\nvar Messages = /*#__PURE__*/function (_React$Component) {\n  _inherits(Messages, _React$Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n\n    firestore.collection('Users').doc(_this.props.User.uid).onSnapshot(function _callee(User) {\n      var data, Saved_Active, Active, Servers;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (User.exists) {\n                data = User.data();\n                Saved_Active = localStorage.getItem('Server');\n                Active = Saved_Active && _Object$keys(data.Servers).includes(Saved_Active) ? Saved_Active : _Object$keys(data.Servers)[0];\n                Servers = new _Map(_Object$entries(data.Servers));\n\n                _this.setState({\n                  Active: Active,\n                  Servers: Servers\n                });\n\n                _this.props.Server_Select(Active, Servers.get(Active));\n              } // deal with the user not having any servers\n\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }, function () {});\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", {\n        className: styles.Container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(Message, {\n        Self: \"mHvcak8OjqZglBlENhQSLqBOgPB3\",\n        Owner: \"mHvcak8OjqZglBlENhQSLqBOgPB3\",\n        Username: \"Spotandjake100\",\n        Picture: \"https://lh3.googleusercontent.com/a-/AOh14Gg6mjzn5KwNGqOcuCE9F_qS1X1Jci0vr4S3TeiTJQ=s96-c\",\n        Content: test_word,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), __jsx(Message, {\n        Self: \"mHvcak8OjqZglBlENhQSLqBOgPB3\",\n        Owner: \"mHvcak8OjqZglBlENhQSLqBOgPB3\",\n        Username: \"Spotandjake100\",\n        Picture: \"https://lh3.googleusercontent.com/a-/AOh14Gg6mjzn5KwNGqOcuCE9F_qS1X1Jci0vr4S3TeiTJQ=s96-c\",\n        Content: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Messages;\n}(React.Component);\n\nexport default Messages;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Messages.tsx"],"names":["React","styles","firestore","Message","Messages","props","collection","doc","User","uid","onSnapshot","exists","data","Saved_Active","localStorage","getItem","Active","Servers","includes","setState","Server_Select","get","Container","test_word","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;;IAWMC,Q;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB;;AAEjBH,IAAAA,SAAS,CAACI,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkC,MAAKF,KAAL,CAAWG,IAAX,CAAgBC,GAAlD,EAAuDC,UAAvD,CAAkE,iBAAMF,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9D,kBAAIA,IAAI,CAACG,MAAT,EAAiB;AACXC,gBAAAA,IADW,GACJJ,IAAI,CAACI,IAAL,EADI;AAEXC,gBAAAA,YAFW,GAEIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAFJ;AAGXC,gBAAAA,MAHW,GAGOH,YAAY,IAAI,aAAYD,IAAI,CAACK,OAAjB,EAA0BC,QAA1B,CAAmCL,YAAnC,CAAjB,GAAqEA,YAArE,GAAoF,aAAYD,IAAI,CAACK,OAAjB,EAA0B,CAA1B,CAH1F;AAIXA,gBAAAA,OAJW,GAIoB,SAAQ,gBAAeL,IAAI,CAACK,OAApB,CAAR,CAJpB;;AAKf,sBAAKE,QAAL,CAAc;AAAEH,kBAAAA,MAAM,EAANA,MAAF;AAAUC,kBAAAA,OAAO,EAAPA;AAAV,iBAAd;;AACA,sBAAKZ,KAAL,CAAWe,aAAX,CAAyBJ,MAAzB,EAAiCC,OAAO,CAACI,GAAR,CAAYL,MAAZ,CAAjC;AACD,eAR6D,CAS9D;;;AAT8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlE,EAUK,YAAM,CAAE,CAVb;AAFiB;AAclB;;;;6BACQ;AACP,aACE;AAAS,QAAA,SAAS,EAAEf,MAAM,CAACqB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,IAAI,EAAC,8BAAd;AAA6C,QAAA,KAAK,EAAC,8BAAnD;AAAkF,QAAA,QAAQ,EAAC,gBAA3F;AAA4G,QAAA,OAAO,EAAC,2FAApH;AAAgN,QAAA,OAAO,EAAEC,SAAzN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,OAAD;AAAS,QAAA,IAAI,EAAC,8BAAd;AAA6C,QAAA,KAAK,EAAC,8BAAnD;AAAkF,QAAA,QAAQ,EAAC,gBAA3F;AAA4G,QAAA,OAAO,EAAC,2FAApH;AAAgN,QAAA,OAAO,EAAC,MAAxN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAxBoBvB,KAAK,CAACwB,S;;AA0B7B,eAAepB,QAAf","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Messages.module.css';\n\nimport { firestore } from './../Scripts/Firebase';\n\nimport Message from './Message';\n\ninterface Message_Scheme {\n  Content: string;\n  Created: firestore;\n  Owner: String;\n  Picture: String;\n  UID: String;\n}\ntype MyProps = { Active: { Name: string, SID: string } };\ntype MyState = { Messages: Map<string, Message_Scheme> };\nclass Messages extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    firestore.collection('Users').doc(this.props.User.uid).onSnapshot(async User => {\n        if (User.exists) {\n          let data = User.data();\n          let Saved_Active = localStorage.getItem('Server');\n          let Active: string = (Saved_Active && Object.keys(data.Servers).includes(Saved_Active)) ? Saved_Active : Object.keys(data.Servers)[0];\n          let Servers: Map<string, string> = new Map(Object.entries(data.Servers));\n          this.setState({ Active, Servers });\n          this.props.Server_Select(Active, Servers.get(Active))\n        }\n        // deal with the user not having any servers\n      }, () => {}\n    )\n  }\n  render() {\n    return (\n      <section className={styles.Container}>\n        <Message Self=\"mHvcak8OjqZglBlENhQSLqBOgPB3\" Owner=\"mHvcak8OjqZglBlENhQSLqBOgPB3\" Username=\"Spotandjake100\" Picture=\"https://lh3.googleusercontent.com/a-/AOh14Gg6mjzn5KwNGqOcuCE9F_qS1X1Jci0vr4S3TeiTJQ=s96-c\" Content={test_word}/>\n        <Message Self=\"mHvcak8OjqZglBlENhQSLqBOgPB3\" Owner=\"mHvcak8OjqZglBlENhQSLqBOgPB3\" Username=\"Spotandjake100\" Picture=\"https://lh3.googleusercontent.com/a-/AOh14Gg6mjzn5KwNGqOcuCE9F_qS1X1Jci0vr4S3TeiTJQ=s96-c\" Content=\"test\"/>\n      </section>\n    );\n  }\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}