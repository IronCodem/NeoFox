{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Server.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './../Style/Components/Server.module.css';\n\nclass Server extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    this.state = {\n      Picture: `${process.env.Storage_Url}/Servers/UUw40MdRDcUxdEy00Zuo/Icon`,\n      isToggleOn: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      role: \"button\",\n      className: styles.Container,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"picture\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: this.state.Picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Server;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Server.tsx"],"names":["React","styles","Server","Component","constructor","props","state","Picture","process","env","Storage_Url","isToggleOn","handleClick","bind","setState","render","Container"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yCAAnB;;AAIA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAuD;AAGrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,WAAY,oCADzB;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcR,KAAK,KAAK;AACtBK,MAAAA,UAAU,EAAE,CAACL,KAAK,CAACK;AADG,KAAL,CAAnB;AAID;;AACDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,IAAI,EAAC,QAAV;AAAmB,MAAA,SAAS,EAAEd,MAAM,CAACe,SAArC;AAAgD,MAAA,OAAO,EAAE,KAAKJ,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AA3BoD;;AA8BvD,eAAeL,MAAf","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Server.module.css';\n\ntype MyProps = { Name: string, id: number };\ntype MyState = { Picture: string, isToggleOn: boolean };\nclass Server extends React.Component<MyProps, MyState> {\n  public state\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      Picture: `${process.env.Storage_Url}/Servers/UUw40MdRDcUxdEy00Zuo/Icon`,\n      isToggleOn: true\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  \n  }\n  render() {\n    return (\n      <div role=\"button\" className={styles.Container} onClick={this.handleClick}>\n        <picture>\n          <img src={this.state.Picture} />\n        </picture>\n      </div>\n    );\n  }\n}\n\nexport default Server;"]},"metadata":{},"sourceType":"module"}