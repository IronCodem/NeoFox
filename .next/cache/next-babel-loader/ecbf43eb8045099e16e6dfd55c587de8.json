{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Servers.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './../Style/Components/Servers.module.css'; //Modules \n\nimport Server from './Server';\n\nclass Servers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    this.state = {\n      Active: 123,\n      Servers: new Map([[123, 'Testing']])\n    };\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, () => {\n      let Comps = [];\n\n      for (let [key, value] of this.state.Servers) {\n        console.log();\n        key, value;\n        Comps.push(__jsx(Server, {\n          Name: Name,\n          id: id,\n          Active: Selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n}\n\nexport default Servers;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Servers.tsx"],"names":["React","styles","Server","Servers","Component","constructor","props","state","Active","Map","render","Container","Comps","key","value","console","log","push","Name","id","Selected"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0CAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAwD;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,GADG;AAEXL,MAAAA,OAAO,EAAE,IAAIM,GAAJ,CAAQ,CACf,CAAE,GAAF,EAAO,SAAP,CADe,CAAR;AAFE,KAAb;AAMD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAS,MAAA,SAAS,EAAET,MAAM,CAACU,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,MAAM;AACL,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyB,KAAKP,KAAL,CAAWJ,OAApC,EAA6C;AAC3CY,QAAAA,OAAO,CAACC,GAAR;AAAcH,QAAAA,GAAG,EAAEC,KAAL;AACdF,QAAAA,KAAK,CAACK,IAAN,CAAW,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAEC,IAAd;AAAoB,UAAA,EAAE,EAAEC,EAAxB;AAA4B,UAAA,MAAM,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACD;AACF,KARL,CADF;AAaD;;AAzBqD;;AA4BxD,eAAejB,OAAf","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Servers.module.css';\n\n//Modules \nimport Server from './Server';\n\ntype MyProps = { };\ntype MyState = { Active: number, Servers: Map<number, string> };\nclass Servers extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      Active: 123,\n      Servers: new Map([\n        [ 123, 'Testing' ]\n      ]) \n    };\n  }\n  render() {\n    return (\n      <section className={styles.Container}>\n        {\n          (() => {\n            let Comps = [];\n            for (let [key, value] of this.state.Servers) {\n              console.log();key, value\n              Comps.push(<Server Name={Name} id={id} Active={Selected}/>);\n            }\n          })\n        }\n      </section>\n    );\n  }\n}\n\nexport default Servers;"]},"metadata":{},"sourceType":"module"}