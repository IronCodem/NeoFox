{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Editor.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo, useState } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  render() {\n    const initialState = [{\n      type: 'paragraph',\n      children: [{\n        text: \"edit me\"\n      }]\n    }];\n    const editor = useMemo(() => withReact(createEditor()), []);\n    const {\n      0: value,\n      1: setValue\n    } = useState(initialState); // <span className={styles.Editor} contentEditable=\"true\"></span>\n\n    return __jsx(\"section\", {\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(Slate, {\n      editor: editor,\n      value: value,\n      onChange: newVal => setValue(newVal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(Editable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      className: styles.Hint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Send A Message...\"));\n  }\n\n}\n\nlet I;\nexport default Input;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Editor.tsx"],"names":["React","useMemo","useState","createEditor","Slate","Editable","withReact","Input","Component","constructor","props","render","initialState","type","children","text","editor","value","setValue","styles","Container","newVal","Hint","I"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;;AAIA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAsD;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;AAElB;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,CAAC;AAACC,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AAA9B,KAAD,CAArB;AACA,UAAMC,MAAM,GAAGf,OAAO,CAAE,MAAMK,SAAS,CAACH,YAAY,EAAb,CAAjB,EAAmC,EAAnC,CAAtB;AACA,UAAM;AAAA,SAACc,KAAD;AAAA,SAAQC;AAAR,QAAoBhB,QAAQ,CAACU,YAAD,CAAlC,CAHO,CAIP;;AACA,WACE;AAAS,MAAA,SAAS,EAAEO,MAAM,CAACC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,MAAM,EAAEJ,MAAf;AAAuB,MAAA,KAAK,EAAEC,KAA9B;AAAqC,MAAA,QAAQ,EAAEI,MAAM,IAAIH,QAAQ,CAACG,MAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,CADF;AAQD;;AAlBmD;;AAqBtD,IAAIC,CAAJ;AACA,eAAehB,KAAf","sourcesContent":["import React, {useMemo, useState} from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\ntype MyProps = { };\ntype MyState = { };\nclass Input extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const initialState = [{type: 'paragraph', children: [{ text: \"edit me\"}]}]\n    const editor = useMemo( () => withReact(createEditor()), [])\n    const [value, setValue] = useState(initialState)\n    // <span className={styles.Editor} contentEditable=\"true\"></span>\n    return (\n      <section className={styles.Container}>\n        <Slate editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n          <Editable />\n        </Slate>\n        <span className={styles.Hint}>Send A Message...</span>\n      </section>\n    );\n  }\n}\n\nlet I\nexport default Input;"]},"metadata":{},"sourceType":"module"}