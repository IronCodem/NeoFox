{"ast":null,"code":"import _slicedToArray from \"/home/runner/NeoFox/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/runner/NeoFox/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/runner/NeoFox/pages/Components/Editor.tsx\",\n    _s = $RefreshSig$(),\n    _this2 = this;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Prism from 'prismjs';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { Text, createEditor, Node } from 'slate';\nimport { withHistory } from 'slate-history';\nimport styles from './../Style/Components/Editor.module.css';\nimport { Send } from './../Scripts/Chatter'; // ts stuff\n\nPrism.languages.markdown = Prism.languages.extend(\"markup\", {});\nPrism.languages.insertBefore(\"markdown\", \"prolog\", {\n  blockquote: {\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: \"punctuation\"\n  },\n  code: [{\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: \"keyword\"\n  }, {\n    pattern: /`\\`.+?`\\`|`[^`\\n]+`/,\n    alias: \"keyword\"\n  }],\n  title: [{\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: \"important\",\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: !0,\n    alias: \"important\",\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  hr: {\n    pattern: /(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  list: {\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"url-reference\": {\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      variable: {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: !0\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation: /^[\\[\\]!:]|[<>]/\n    },\n    alias: \"url\"\n  },\n  bold: {\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic: {\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^[*_]|[*_]$/\n    }\n  },\n  url: {\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      variable: {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: !0\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown.bold.inside.url = Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.italic.inside.url = Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.bold.inside.italic = Prism.util.clone(Prism.languages.markdown.italic);\nPrism.languages.markdown.italic.inside.bold = Prism.util.clone(Prism.languages.markdown.bold);\n\nvar serialize = function serialize(nodes) {\n  return nodes.map(function (n) {\n    return Node.string(n);\n  }).join('\\n');\n};\n\nvar initialValue = [{\n  type: 'paragraph',\n  children: [{\n    text: ''\n  }]\n}];\n\nfunction Editor(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var renderLeaf = useCallback(function (props) {\n    return /*#__PURE__*/_jsxDEV(Leaf, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 43\n    }, _this);\n  }, []);\n  var editor = useMemo(function () {\n    return withHistory(withReact(createEditor()));\n  }, []);\n  var decorate = useCallback(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        node = _ref2[0],\n        path = _ref2[1];\n\n    if (!Text.isText(node)) return [];\n    var ranges = [],\n        tokens = Prism.tokenize(node.text, Prism.languages.markdown);\n\n    var getLength = function getLength(token) {\n      if (typeof token === 'string') return token.length;else if (typeof token.content === 'string') return token.content.length;else return token.content.reduce(function (l, t) {\n        return l + getLength(t);\n      }, 0);\n    };\n\n    var start = 0;\n\n    var _iterator = _createForOfIteratorHelper(tokens),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var token = _step.value;\n        var end = start + getLength(token);\n\n        if (typeof token !== 'string') {\n          var _ranges$push;\n\n          ranges.push((_ranges$push = {}, _defineProperty(_ranges$push, token.type, true), _defineProperty(_ranges$push, \"anchor\", {\n            path: path,\n            offset: start\n          }), _defineProperty(_ranges$push, \"focus\", {\n            path: path,\n            offset: end\n          }), _ranges$push));\n        }\n\n        start = end;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return ranges;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.Container,\n    children: /*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: function onChange(value) {\n        return setValue(value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Editable, {\n        contentEditableProps: {\n          ariaLabel: ''\n        },\n        decorate: decorate,\n        renderLeaf: renderLeaf,\n        placeholder: \"Send A Message\",\n        onKeyDown: function onKeyDown(e) {\n          if (e.keyCode == 13 && !e.shiftKey) {\n            e.preventDefault();\n            if (serialize(value).trim().length == 0) return;\n            Send(props.User, props.SID, serialize(value));\n            editor.selection = {\n              anchor: {\n                path: [0, 0],\n                offset: 0\n              },\n              focus: {\n                path: [0, 0],\n                offset: 0\n              }\n            };\n            setValue(initialValue);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"gnGS35FPQz5Y3Cjo9BTjpOzwGpM=\");\n\n_c = Editor;\n\nvar Leaf = function Leaf(_ref3) {\n  var attributes = _ref3.attributes,\n      children = _ref3.children,\n      leaf = _ref3.leaf;\n  var Classes = [];\n  if (leaf.bold) Classes.push(styles.Bold);\n  if (leaf.italic) Classes.push(styles.Italic);\n  if (leaf.underlined) Classes.push(styles.Underline);\n  if (leaf.title) Classes.push(styles.Title);\n  if (leaf.list) Classes.push(styles.List);\n  if (leaf.hr) Classes.push(styles.Hr);\n  if (leaf.blockquote) Classes.push(styles.Blockquote);\n  if (leaf.code) Classes.push(styles.Inline_Code);\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, attributes), {}, {\n    className: Classes.join(' '),\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 11\n  }, _this2);\n};\n\n_c2 = Leaf;\nexport default Editor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Editor\");\n$RefreshReg$(_c2, \"Leaf\");","map":{"version":3,"sources":["/home/runner/NeoFox/pages/Components/Editor.tsx"],"names":["Prism","React","useState","useCallback","useMemo","Slate","Editable","withReact","Text","createEditor","Node","withHistory","styles","Send","languages","markdown","extend","insertBefore","blockquote","pattern","alias","code","title","inside","punctuation","lookbehind","hr","list","variable","bold","italic","url","util","clone","serialize","nodes","map","n","string","join","initialValue","type","children","text","Editor","props","value","setValue","renderLeaf","editor","decorate","node","path","isText","ranges","tokens","tokenize","getLength","token","length","content","reduce","l","t","start","end","push","offset","Container","ariaLabel","e","keyCode","shiftKey","preventDefault","trim","User","SID","selection","anchor","focus","Leaf","attributes","leaf","Classes","Bold","Italic","underlined","Underline","Title","List","Hr","Blockquote","Inline_Code"],"mappings":"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","sourcesContent":["import Prism from 'prismjs';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact, ReactEditor } from 'slate-react';\nimport { Text, createEditor, Element, Descendant, Node, BaseEditor } from 'slate';\nimport { withHistory, HistoryEditor } from 'slate-history';\nimport styles from './../Style/Components/Editor.module.css';\n\nimport { Send } from './../Scripts/Chatter';\n\n// ts stuff\ntype CustomText = { text: string; bold: boolean; italic: boolean }\n\ndeclare module 'slate' {\n  interface CustomTypes {\n    Editor: BaseEditor & ReactEditor & HistoryEditor\n    Element: { type: 'paragraph'; children: CustomText[] }\n    Text: CustomText\n  }\n}\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{});\nPrism.languages.insertBefore(\"markdown\",\"prolog\", {\n  blockquote:{\n    pattern:/^>(?:[\\t ]*>)*/m,\n    alias:\"punctuation\"\n  },\n  code:[\n    {\n      pattern:/^(?: {4}|\\t).+/m,\n      alias:\"keyword\"\n    },\n    {\n      pattern:/`\\`.+?`\\`|`[^`\\n]+`/,\n      alias: \"keyword\"\n    }\n  ],\n  title:[\n    {\n      pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n      alias:\"important\",\n      inside:{\n        punctuation:/==+$|--+$/\n      }\n    },\n    {\n      pattern:/(^\\s*)#+.+/m,\n      lookbehind:!0,\n      alias:\"important\",\n      inside:{\n        punctuation:/^#+|#+$/\n      }\n    }\n  ],\n  hr:{\n    pattern:/(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind:!0,\n    alias:\"punctuation\"\n  },\n  list:{\n    pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind:!0,\n    alias:\"punctuation\"\n  },\n  \"url-reference\":{\n    pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside:{\n      variable:{\n        pattern:/^(!?\\[)[^\\]]+/,\n        lookbehind:!0\n      },\n      'string':/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation:/^[\\[\\]!:]|[<>]/\n    },\n    alias:\"url\"\n  },\n  bold:{\n    pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind:!0,\n    inside:{\n      punctuation:/^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic:{\n    pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind:!0,\n    inside:{\n      punctuation:/^[*_]|[*_]$/\n    }\n  },\n  url:{\n    pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside:{\n      variable:{\n        pattern:/(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind:!0\n      },\n      'string':{\n        pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic);\nPrism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold);\n\n\nconst serialize = nodes => nodes.map(n => Node.string(n)).join('\\n');\nconst initialValue: Descendant[] = [{ type: 'paragraph', children: [{ text: '' } ] }];\nfunction Editor(props) {\n  const [value, setValue] = useState<Descendant[]>(initialValue)\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  const decorate = useCallback(([node, path]) => {\n    if (!Text.isText(node)) return [];\n    const ranges = [], tokens = Prism.tokenize(node.text, Prism.languages.markdown);\n    const getLength = token => {\n      if (typeof token === 'string') return token.length;\n      else if (typeof token.content === 'string') return token.content.length;\n      else return token.content.reduce((l, t) => l + getLength(t), 0);\n    }\n    let start = 0;\n    for (const token of tokens) {\n      const end = start + getLength(token);\n      if (typeof token !== 'string') {\n        ranges.push({\n          [token.type]: true,\n          anchor: { path, offset: start },\n          focus: { path, offset: end },\n        });\n      }\n      start = end;\n    }\n    return ranges;\n  }, []);\n  return (\n    <section className={styles.Container}>\n      <Slate editor={editor} value={value} onChange={value => setValue(value)}>\n        <Editable\n          contentEditableProps={({ ariaLabel: '' }) }\n          decorate={decorate}\n          renderLeaf={renderLeaf}\n          placeholder=\"Send A Message\"\n          onKeyDown={e => {\n            if (e.keyCode == 13 && !e.shiftKey) {\n              e.preventDefault();\n              if (serialize(value).trim().length == 0) return;\n              Send(props.User, props.SID, serialize(value));\n              editor.selection = {\n                anchor: { path: [0, 0], offset: 0 },\n                focus: { path: [0, 0], offset: 0 },\n              }\n              setValue(initialValue);\n            }\n          }}\n        />\n      </Slate>\n    </section>\n  )\n}\nconst Leaf = ({ attributes, children, leaf }) => {\n  let Classes = [];\n  if (leaf.bold) Classes.push(styles.Bold);\n  if (leaf.italic) Classes.push(styles.Italic);\n  if (leaf.underlined) Classes.push(styles.Underline);\n  if (leaf.title) Classes.push(styles.Title);\n  if (leaf.list) Classes.push(styles.List);\n  if (leaf.hr) Classes.push(styles.Hr);\n  if (leaf.blockquote) Classes.push(styles.Blockquote);\n  if (leaf.code) Classes.push(styles.Inline_Code);\n  return (<span {...attributes} className={Classes.join(' ')}>{children}</span>);\n}\nexport default Editor;"]},"metadata":{},"sourceType":"module"}