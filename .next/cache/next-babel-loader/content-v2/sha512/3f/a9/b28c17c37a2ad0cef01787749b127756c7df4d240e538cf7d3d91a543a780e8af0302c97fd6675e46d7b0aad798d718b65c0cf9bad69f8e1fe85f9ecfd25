{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport packageJson from './../package.json'; // import firebase\n\nimport { firebase, config } from './Scripts/Firebase';\nimport { FirebaseAuthProvider, IfFirebaseAuthed, IfFirebaseUnAuthed } from \"@react-firebase/auth\"; // Import the pages\n\nimport Main from './Main';\n\nlet Application = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: packageJson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FirebaseAuthProvider, _objectSpread(_objectSpread({\n      firebase: firebase\n    }, config), {}, {\n      children: [/*#__PURE__*/_jsxDEV(IfFirebaseUnAuthed, {\n        children: ({\n          isSignedIn,\n          user,\n          providerId\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n              firebase.auth().signInWithPopup(googleAuthProvider);\n            },\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IfFirebaseAuthed, {\n        children: ({\n          user\n        }) => /*#__PURE__*/_jsxDEV(Main, {\n          User: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Application;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/index.tsx"],"names":["React","Head","packageJson","firebase","config","FirebaseAuthProvider","IfFirebaseAuthed","IfFirebaseUnAuthed","Main","Application","name","isSignedIn","user","providerId","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,oBAAjC;AACA,SAAQC,oBAAR,EAA8BC,gBAA9B,EAAgDC,kBAAhD,QAAyE,sBAAzE,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAIC,WAAW,GAAG,MAAM;AACtB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQP,WAAW,CAACQ;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAEP;AAAhC,OAA8CC,MAA9C;AAAA,8BACE,QAAC,kBAAD;AAAA,kBACG,CAAC;AAAEO,UAAAA,UAAF;AAAcC,UAAAA,IAAd;AAAoBC,UAAAA;AAApB,SAAD,KAAsC;AACrC,8BACE;AACE,YAAA,OAAO,EAAE,MAAM;AACb,oBAAMC,kBAAkB,GAAG,IAAIX,QAAQ,CAACY,IAAT,CAAcC,kBAAlB,EAA3B;AACAb,cAAAA,QAAQ,CAACY,IAAT,GAAgBE,eAAhB,CAAgCH,kBAAhC;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD;AAZH;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,gBAAD;AAAA,kBACG,CAAC;AAAEF,UAAAA;AAAF,SAAD,kBAAe,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;AA8BA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport packageJson from './../package.json';\n// import firebase\nimport { firebase, config } from './Scripts/Firebase';\nimport {FirebaseAuthProvider, IfFirebaseAuthed, IfFirebaseUnAuthed} from \"@react-firebase/auth\";\n// Import the pages\nimport Main from './Main';\n\nlet Application = () => {\n  return (\n    <div className=\"Page\">\n      <Head>\n        <title>{packageJson.name}</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <FirebaseAuthProvider firebase={firebase} {...config}>\n        <IfFirebaseUnAuthed>\n          {({ isSignedIn, user, providerId }) => {\n            return (\n              <button\n                onClick={() => {\n                  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n                  firebase.auth().signInWithPopup(googleAuthProvider);\n                }}\n              >\n                Sign In with Google\n              </button>\n            )\n          }}\n        </IfFirebaseUnAuthed>\n        <IfFirebaseAuthed>\n          {({ user }) => (<Main User={user} />) }\n        </IfFirebaseAuthed>\n      </FirebaseAuthProvider>\n    </div>\n  );\n}\n\nexport default Application;"]},"metadata":{},"sourceType":"module"}