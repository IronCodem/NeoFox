{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Main.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './Style/Main.module.css'; // Components\n\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    };\n  }\n\n  Change_Server(id, name) {\n    this.setState({\n      Active: {\n        Name: name,\n        SID: id\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Container,\n      children: [/*#__PURE__*/_jsxDEV(Servers, {\n        Server_Select: this.Change_Server.bind(this),\n        User: this.props.User\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), (() => {\n        if (this.state.Active.SID) {\n          switch (this.state.Active.SID) {\n            case 'Settings':\n              break;\n\n            default:\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Channels, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Content, {\n                  Active: this.state.Active,\n                  User: this.props.User\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true);\n              break;\n          }\n        }\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Main.tsx"],"names":["React","styles","Servers","Channels","Content","Main","Component","constructor","props","state","Active","Name","SID","Change_Server","id","name","setState","render","Container","bind","User"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAIA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAqD;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AADG,KAAb;AAMD;;AACDC,EAAAA,aAAa,CAACC,EAAD,EAAKC,IAAL,EAAW;AACtB,SAAKC,QAAL,CAAc;AACZN,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEI,IADA;AAENH,QAAAA,GAAG,EAAEE;AAFC;AADI,KAAd;AAMD;;AACDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,aAAa,EAAE,KAAKL,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAAxB;AAAuD,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY;AAAxE;AAAA;AAAA;AAAA;AAAA,cADF,EAGI,CAAC,MAAM;AACL,YAAI,KAAKX,KAAL,CAAWC,MAAX,CAAkBE,GAAtB,EAA2B;AACzB,kBAAQ,KAAKH,KAAL,CAAWC,MAAX,CAAkBE,GAA1B;AACE,iBAAK,UAAL;AACE;;AACF;AACE,kCACF;AAAA,wCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,OAAD;AAAS,kBAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAA5B;AAAoC,kBAAA,IAAI,EAAE,KAAKF,KAAL,CAAWY;AAArD;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,8BADE;AAMA;AAVJ;AAaD;AACF,OAhBD,GAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA5CkD;;AA+CrD,eAAef,IAAf","sourcesContent":["import React from 'react';\n\nimport styles from './Style/Main.module.css';\n\n// Components\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\ntype MyProps = { User: any };\ntype MyState = { Active: { Name: string, SID: string } };\nclass Main extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    }\n  }\n  Change_Server(id, name) {\n    this.setState({\n      Active: {\n        Name: name,\n        SID: id\n      }\n    });\n  }\n  render() {\n    return (\n      <div className={styles.Container}>\n        <Servers Server_Select={this.Change_Server.bind(this)} User={this.props.User} />\n        {\n          (() => {\n            if (this.state.Active.SID) {\n              switch (this.state.Active.SID) {\n                case 'Settings':\n                  break;\n                default:\n                  return (\n                <>\n                  <Channels />\n                  <Content Active={this.state.Active} User={this.props.User} />\n                </>\n              );\n                  break;\n              }\n              \n            }\n          })()\n        }\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}