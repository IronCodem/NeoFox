{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/runner/NeoFox/pages/Components/Messages.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './../Style/Components/Messages.module.css';\nimport { firestore, firebase } from './../Scripts/Firebase';\nimport Message from './Message';\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      Messages: new Map(),\n      Limit: 7\n    });\n\n    firestore.collection(`Servers/${this.props.SID}/Messages`).limit(this.state.Limit).orderBy('Created', 'desc').onSnapshot(async Server => {\n      let Msgs = this.state.Messages;\n      Server.docChanges().forEach(Msg => {\n        if (Msg.type != 'removed') {\n          const Data = Msg.doc.data();\n          if (!Data.Created) return;\n          let Time = Data.Created.toMillis();\n          Msgs.set(Msg.doc.id, {\n            Time,\n            Msg: /*#__PURE__*/_jsxDEV(Message, {\n              Self: this.props.User,\n              Owner: Data.UID,\n              Username: Data.Owner,\n              Picture: Data.Picture,\n              Content: Data.Content,\n              Time: Time\n            }, Msg.doc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          });\n        } else Msgs.delete(Msg.doc.id);\n      });\n      this.setState({\n        Messages: new Map([...Msgs.entries()].sort((a, b) => b[1].Time - a[1].Time))\n      });\n    }, () => {});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.Container,\n      onLoad: () => {\n        const remoteConfig = firebase.remoteConfig();\n        remoteConfig.defaultConfig = {\n          Message_Limit: 30\n        };\n        const val = remoteConfig.getValue('Message_Limit');\n        this.setState({\n          Limit: val['_value']\n        });\n        console.log;\n      },\n      children: [...this.state.Messages].map(e => e[1].Msg)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/home/runner/NeoFox/pages/Components/Messages.tsx"],"names":["React","styles","firestore","firebase","Message","Messages","Component","constructor","props","Map","Limit","collection","SID","limit","state","orderBy","onSnapshot","Server","Msgs","docChanges","forEach","Msg","type","Data","doc","data","Created","Time","toMillis","set","id","User","UID","Owner","Picture","Content","delete","setState","entries","sort","a","b","render","Container","remoteConfig","defaultConfig","Message_Limit","val","getValue","console","log","map","e"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Messages.module.css';\n\nimport { firestore, firebase } from './../Scripts/Firebase';\n\nimport Message from './Message';\n\ntype MyProps = { SID: string, User: any };\ntype Message_Entry = { Time: number, Msg: Message };\ntype MyState = { Messages: Map<string, Message_Entry>, Limit: number };\nclass Messages extends React.Component<MyProps, MyState> {\n  public state: MyState = { Messages: new Map(), Limit: 7 };\n  constructor(props) {\n    super(props);\n    firestore.collection(`Servers/${this.props.SID}/Messages`).limit(this.state.Limit).orderBy('Created', 'desc')\n      .onSnapshot(async Server => {\n        let Msgs: Map<string, Message_Entry> = this.state.Messages;\n        Server.docChanges().forEach(Msg => {\n          if (Msg.type != 'removed') {\n            const Data = Msg.doc.data();\n            if (!Data.Created) return;\n            let Time = Data.Created.toMillis();\n            Msgs.set(Msg.doc.id, {\n              Time,\n              Msg: (\n                <Message \n                  key={Msg.doc.id}\n                  Self={this.props.User}\n                  Owner={Data.UID}\n                  Username={Data.Owner}\n                  Picture={Data.Picture}\n                  Content={Data.Content}\n                  Time={Time}\n                />\n              )\n            });\n          } else Msgs.delete(Msg.doc.id);\n        });\n        this.setState({\n          Messages: new Map([...Msgs.entries()].sort((a, b) => b[1].Time-a[1].Time))\n        });\n      }, () => {}\n    )\n  }\n  render() {\n    return (\n      <section \n        className={styles.Container}\n        onLoad={(() => {\n          const remoteConfig = firebase.remoteConfig();\n          remoteConfig.defaultConfig = {\n            Message_Limit: 30\n          };\n          const val = remoteConfig.getValue('Message_Limit');\n          this.setState({ Limit: val['_value'] });\n          console.log\n        })}\n        >\n        {[...this.state.Messages].map(e => e[1].Msg)}\n      </section>\n    );\n  }\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}