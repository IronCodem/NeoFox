{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/runner/Chatter-React/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Servers.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styles from './../Style/Components/Servers.module.css';\nimport { firestore } from './../Scripts/Firebase'; //Modules \n\nimport Server from './Server';\n\nvar Servers = /*#__PURE__*/function (_React$Component) {\n  _inherits(Servers, _React$Component);\n\n  var _super = _createSuper(Servers);\n\n  function Servers(props) {\n    var _this;\n\n    _classCallCheck(this, Servers);\n\n    _this = _super.call(this, props); // create the snapshow listener\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      Active: '',\n      Servers: new Map()\n    });\n\n    firestore.collection('Users').doc(_this.props.User.uid).onSnapshot( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(User) {\n        var data, Saved_Active, Active, _Servers, Server_Info, SID, Data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!User.exists) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                data = User.data();\n                Saved_Active = localStorage.getItem('Server');\n\n                _this.Change_Server(aved_Active);\n\n                Active = Saved_Active && Object.keys(data.Servers).includes(Saved_Active) ? Saved_Active : Object.keys(data.Servers)[0];\n                _Servers = new Map(Object.entries(data.Servers));\n\n                _this.setState({\n                  Active: Active,\n                  Servers: _Servers\n                });\n\n                _this.props.Server_Select(Active, _Servers.get(Active));\n\n                _context2.next = 16;\n                break;\n\n              case 10:\n                // Make the user a profile with the basic server\n                Server_Info = /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Server_ID) {\n                    var Document, doc;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            Document = firestore.collection('Servers').doc(Server_ID);\n                            _context.next = 3;\n                            return Document.get()[\"catch\"](function () {\n                              return 'Banned';\n                            });\n\n                          case 3:\n                            doc = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              Name: doc && doc != 'Banned' && doc.exists ? doc.data().Name : null,\n                              Banned: doc == 'Banned' ? true : false\n                            });\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function Server_Info(_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                SID = 'UUw40MdRDcUxdEy00Zuo';\n                _context2.next = 14;\n                return Server_Info(SID);\n\n              case 14:\n                Data = _context2.sent;\n\n                if (!Data.Banned) {\n                  firestore.collection('Users').doc(_this.props.User.uid).set({\n                    Servers: _defineProperty({}, SID, Data.Name)\n                  })[\"catch\"](function (err) {\n                    console.log(err);\n                  });\n                }\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), function () {});\n    return _this;\n  }\n\n  _createClass(Servers, [{\n    key: \"Change_Server\",\n    value: function Change_Server(evt, child) {\n      localStorage.setItem('Server', child);\n      this.setState({\n        Active: child\n      });\n      this.props.Server_Select(child, this.state.Servers.get(child));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.Container,\n        children: [function () {\n          var Comps = [];\n\n          var _iterator = _createForOfIteratorHelper(_this2.state.Servers),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  key = _step$value[0],\n                  value = _step$value[1];\n\n              Comps.push( /*#__PURE__*/_jsxDEV(Server, {\n                id: key,\n                Name: value,\n                Active: _this2.state.Active,\n                customClickEvent: _this2.Change_Server.bind(_this2)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, _this2));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return Comps;\n        }(), /*#__PURE__*/_jsxDEV(Server, {\n          id: 'Settings',\n          Name: this.props.User.displayName,\n          Active: this.state.Active,\n          customClickEvent: this.Change_Server.bind(this),\n          Self: this.props.User.photoURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Servers;\n}(React.Component);\n\nexport default Servers;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Servers.tsx"],"names":["React","styles","firestore","Server","Servers","props","Active","Map","collection","doc","User","uid","onSnapshot","exists","data","Saved_Active","localStorage","getItem","Change_Server","aved_Active","Object","keys","includes","entries","setState","Server_Select","get","Server_Info","Server_ID","Document","Name","Banned","SID","Data","set","err","console","log","evt","child","setItem","state","Container","Comps","key","value","push","bind","displayName","photoURL","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './../Style/Components/Servers.module.css';\nimport { firestore, firebase } from './../Scripts/Firebase';\n//Modules \nimport Server from './Server';\ntype MyProps = { Server_Select: Function, User: any };\ntype MyState = { Active: string, Servers: Map<string, string> };\nclass Servers extends React.Component<MyProps, MyState> {\n  public state: MyState = { Active: '', Servers: new Map() };\n  constructor(props) {\n    super(props);\n    // create the snapshow listener\n    firestore.collection('Users').doc(this.props.User.uid).onSnapshot(async User => {\n        if (User.exists) {\n          let data = User.data();\n          let Saved_Active = localStorage.getItem('Server');\n          this.Change_Server(aved_Active);\n          let Active: string = (Saved_Active && Object.keys(data.Servers).includes(Saved_Active)) ? Saved_Active : Object.keys(data.Servers)[0];\n          let Servers: Map<string, string> = new Map(Object.entries(data.Servers));\n          this.setState({ Active, Servers });\n          this.props.Server_Select(Active, Servers.get(Active))\n        } else {\n          // Make the user a profile with the basic server\n          let Server_Info = async (Server_ID: string)  => {\n            let Document = firestore.collection('Servers').doc(Server_ID);\n            let doc = await Document.get().catch(() => 'Banned');\n            return {\n              Name: doc && doc != 'Banned' && doc.exists ? doc.data().Name : null,\n              Banned: doc == 'Banned' ? true : false\n            }\n          }\n          let SID = 'UUw40MdRDcUxdEy00Zuo';\n          let Data = await Server_Info(SID);\n          if (!Data.Banned) {\n            firestore.collection('Users').doc(this.props.User.uid).set({\n              Servers: { [SID]: Data.Name }\n            }).catch(err => { console.log(err)});\n          }\n        }\n        // deal with the user not having any servers\n      }, () => {}\n    )\n  }\n  Change_Server(evt, child) {\n    localStorage.setItem('Server', child);\n    this.setState({Active: child});\n    this.props.Server_Select(child,this.state.Servers.get(child))\n  }\n  render() {\n    return (\n      <section className={styles.Container}>\n        {\n          (() => {\n            let Comps = [];\n            for (let [key, value] of this.state.Servers) {\n              Comps.push(\n                <Server \n                  key={key}\n                  id={key}\n                  Name={value}\n                  Active={this.state.Active}\n                  customClickEvent={this.Change_Server.bind(this)}\n                />\n              );\n            }\n            return Comps;\n          })()\n        }\n        <Server id={'Settings'} Name={this.props.User.displayName} Active={this.state.Active} customClickEvent={this.Change_Server.bind(this)} Self={this.props.User.photoURL}/>\n      </section>\n    );\n  }\n}\n\nexport default Servers;"]},"metadata":{},"sourceType":"module"}