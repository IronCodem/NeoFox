{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/runner/Chatter-React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Main.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styles from './Style/Main.module.css'; // Components\n\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\nvar Main = /*#__PURE__*/function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n\n    _this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"Change_Server\",\n    value: function Change_Server(id, name) {\n      this.setState({\n        Active: {\n          Name: name,\n          SID: id\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Container,\n        children: [/*#__PURE__*/_jsxDEV(Servers, {\n          Server_Select: this.Change_Server.bind(this),\n          User: this.props.User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), function () {\n          if (_this2.state.Active.SID) {\n            switch (_this2.state.Active.SID) {\n              case 'Settings':\n                break;\n\n              default:\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Channels, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 23\n                  }, _this2), /*#__PURE__*/_jsxDEV(Content, {\n                    Active: _this2.state.Active,\n                    User: _this2.props.User\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 23\n                  }, _this2)]\n                }, void 0, true);\n                break;\n            }\n          }\n        }()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Main.tsx"],"names":["React","styles","Servers","Channels","Content","Main","props","state","Active","Name","SID","id","name","setState","Container","Change_Server","bind","User","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAIMC,I;;;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AADG,KAAb;AAFiB;AAQlB;;;;kCACaC,E,EAAIC,I,EAAM;AACtB,WAAKC,QAAL,CAAc;AACZL,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEG,IADA;AAENF,UAAAA,GAAG,EAAEC;AAFC;AADI,OAAd;AAMD;;;6BACQ;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACa,SAAvB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAxB;AAAuD,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADF,EAGK,YAAM;AACL,cAAI,MAAI,CAACV,KAAL,CAAWC,MAAX,CAAkBE,GAAtB,EAA2B;AACzB,oBAAQ,MAAI,CAACH,KAAL,CAAWC,MAAX,CAAkBE,GAA1B;AACE,mBAAK,UAAL;AACE;;AACF;AACE,oCACE;AAAA,0CACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,OAAD;AAAS,oBAAA,MAAM,EAAE,MAAI,CAACH,KAAL,CAAWC,MAA5B;AAAoC,oBAAA,IAAI,EAAE,MAAI,CAACF,KAAL,CAAWW;AAArD;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA,gCADF;AAMA;AAVJ;AAYD;AACF,SAfD,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD;;;;EA3CgBjB,KAAK,CAACkB,S;;AA8CzB,eAAeb,IAAf","sourcesContent":["import React from 'react';\n\nimport styles from './Style/Main.module.css';\n\n// Components\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\ntype MyProps = { User: any };\ntype MyState = { Active: { Name: string, SID: string } };\nclass Main extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    }\n  }\n  Change_Server(id, name) {\n    this.setState({\n      Active: {\n        Name: name,\n        SID: id\n      }\n    });\n  }\n  render() {\n    return (\n      <div className={styles.Container}>\n        <Servers Server_Select={this.Change_Server.bind(this)} User={this.props.User} />\n        {\n          (() => {\n            if (this.state.Active.SID) {\n              switch (this.state.Active.SID) {\n                case 'Settings':\n                  break;\n                default:\n                  return (\n                    <>\n                      <Channels />\n                      <Content Active={this.state.Active} User={this.props.User} />\n                    </>\n                  );\n                  break;\n              }\n            }\n          })()\n        }\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}