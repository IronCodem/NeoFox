{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Messages.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './../Style/Components/Messages.module.css';\nimport { firestore } from './../Scripts/Firebase';\nimport Message from './Message';\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      Messages: []\n    });\n\n    console.log(`Servers/${this.props.SID}/Messages`);\n    firestore.collection(`Servers/${this.props.SID}/Messages`).limit(5).orderBy('Created', 'desc').onSnapshot(async Server => {\n      let Msgs = [];\n      Server.docChanges().forEach(Msg => {\n        if (Msg.type != 'removed') {\n          const Data = Msg.doc.data();\n          if (!Data.Created) return;\n          Msgs.push(__jsx(Message, {\n            key: Msg.doc.id,\n            Self: \"mHvcak8OjqZglBlENhQSLqBOgPB3\",\n            Owner: Data.UID,\n            Username: Data.Owner,\n            Picture: Data.Picture,\n            Content: Data.Content,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }));\n        }\n      });\n      this.setState({\n        Messages: Msgs\n      });\n    }, () => {});\n  }\n\n  render() {\n    console.log(this.state.Messages);\n    return __jsx(\"section\", {\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.Messages);\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Messages.tsx"],"names":["React","styles","firestore","Message","Messages","Component","constructor","props","console","log","SID","collection","limit","orderBy","onSnapshot","Server","Msgs","docChanges","forEach","Msg","type","Data","doc","data","Created","push","id","UID","Owner","Picture","Content","setState","render","state","Container"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAOA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAyD;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCADK;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KACL;;AAEjBI,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAU,KAAKF,KAAL,CAAWG,GAAI,WAAtC;AACAR,IAAAA,SAAS,CAACS,UAAV,CAAsB,WAAU,KAAKJ,KAAL,CAAWG,GAAI,WAA/C,EAA2DE,KAA3D,CAAiE,CAAjE,EAAoEC,OAApE,CAA4E,SAA5E,EAAuF,MAAvF,EACGC,UADH,CACc,MAAMC,MAAN,IAAgB;AAC1B,UAAIC,IAAe,GAAG,EAAtB;AACAD,MAAAA,MAAM,CAACE,UAAP,GAAoBC,OAApB,CAA6BC,GAAD,IAAS;AACnC,YAAIA,GAAG,CAACC,IAAJ,IAAY,SAAhB,EAA2B;AACzB,gBAAMC,IAAI,GAAGF,GAAG,CAACG,GAAJ,CAAQC,IAAR,EAAb;AACA,cAAI,CAACF,IAAI,CAACG,OAAV,EAAmB;AACnBR,UAAAA,IAAI,CAACS,IAAL,CACE,MAAC,OAAD;AACE,YAAA,GAAG,EAAEN,GAAG,CAACG,GAAJ,CAAQI,EADf;AAEE,YAAA,IAAI,EAAC,8BAFP;AAGE,YAAA,KAAK,EAAEL,IAAI,CAACM,GAHd;AAIE,YAAA,QAAQ,EAAEN,IAAI,CAACO,KAJjB;AAKE,YAAA,OAAO,EAAEP,IAAI,CAACQ,OALhB;AAME,YAAA,OAAO,EAAER,IAAI,CAACS,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF,OAfD;AAgBA,WAAKC,QAAL,CAAc;AAAE3B,QAAAA,QAAQ,EAAEY;AAAZ,OAAd;AACD,KApBH,EAoBK,MAAM,CAAE,CApBb;AAsBD;;AACDgB,EAAAA,MAAM,GAAG;AACPxB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKwB,KAAL,CAAW7B,QAAvB;AACA,WACE;AAAS,MAAA,SAAS,EAAEH,MAAM,CAACiC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAW7B,QADd,CADF;AAKD;;AAnCsD;;AAqCzD,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Messages.module.css';\n\nimport { firestore } from './../Scripts/Firebase';\n\nimport Message from './Message';\n\ntype MyProps = { SID: string };\ntype Message_Entry = {\n  \n}\ntype MyState = { Messages: Message[] };\nclass Messages extends React.Component<MyProps, MyState> {\n  public state: MyState = { Messages: [] }\n  constructor(props) {\n    super(props);\n    console.log(`Servers/${this.props.SID}/Messages`);\n    firestore.collection(`Servers/${this.props.SID}/Messages`).limit(5).orderBy('Created', 'desc')\n      .onSnapshot(async Server => {\n        let Msgs: Message[] = [];\n        Server.docChanges().forEach((Msg) => {\n          if (Msg.type != 'removed') {\n            const Data = Msg.doc.data();\n            if (!Data.Created) return;\n            Msgs.push(\n              <Message \n                key={Msg.doc.id}\n                Self=\"mHvcak8OjqZglBlENhQSLqBOgPB3\"\n                Owner={Data.UID}\n                Username={Data.Owner}\n                Picture={Data.Picture}\n                Content={Data.Content}\n              />\n            )\n          }\n        });\n        this.setState({ Messages: Msgs });\n      }, () => {}\n    )\n  }\n  render() {\n    console.log(this.state.Messages);\n    return (\n      <section className={styles.Container}>\n        {this.state.Messages}\n      </section>\n    );\n  }\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}