{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n            font-family: monospace;\\n            background-color: #eee;\\n            padding: 3px;\\n          \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n            display: inline-block;\\n            border-left: 2px solid #ddd;\\n            padding-left: 10px;\\n            color: #aaa;\\n            font-style: italic;\\n          \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n            display: block;\\n            text-align: center;\\n            border-bottom: 2px solid #ddd;\\n          \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n            padding-left: 10px;\\n            font-size: 20px;\\n            line-height: 10px;\\n          \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n            display: inline-block;\\n            font-weight: bold;\\n            font-size: 20px;\\n            margin: 20px 0 10px 0;\\n          \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        font-weight: \", \";\\n        font-style: \", \";\\n        text-decoration: \", \";\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Prism from 'prismjs';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { Text, createEditor } from 'slate';\nimport { withHistory } from 'slate-history';\nimport { css } from '@emotion/css';\nPrism.languages.markdown = Prism.languages.extend(\"markup\", {});\nPrism.languages.insertBefore(\"markdown\", \"prolog\", {\n  blockquote: {\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: \"punctuation\"\n  },\n  code: [{\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: \"keyword\"\n  }, {\n    pattern: /`\\`.+?`\\`|`[^`\\n]+`/,\n    alias: \"keyword\"\n  }],\n  title: [{\n    pattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: \"important\",\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: !0,\n    alias: \"important\",\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  hr: {\n    pattern: /(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  list: {\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"url-reference\": {\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      variable: {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: !0\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation: /^[\\[\\]!:]|[<>]/\n    },\n    alias: \"url\"\n  },\n  bold: {\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic: {\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^[*_]|[*_]$/\n    }\n  },\n  url: {\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      variable: {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: !0\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown.bold.inside.url = Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.italic.inside.url = Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.bold.inside.italic = Prism.util.clone(Prism.languages.markdown.italic);\nPrism.languages.markdown.italic.inside.bold = Prism.util.clone(Prism.languages.markdown.bold);\n\nvar MarkdownPreviewExample = function MarkdownPreviewExample() {\n  var _useState = useState(initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var renderLeaf = useCallback(function (props) {\n    return __jsx(Leaf, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }, []);\n  var editor = useMemo(function () {\n    return withHistory(withReact(createEditor()));\n  }, []);\n  var decorate = useCallback(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        node = _ref2[0],\n        path = _ref2[1];\n\n    var ranges = [];\n\n    if (!Text.isText(node)) {\n      return ranges;\n    }\n\n    var getLength = function getLength(token) {\n      if (typeof token === 'string') {\n        return token.length;\n      } else if (typeof token.content === 'string') {\n        return token.content.length;\n      } else {\n        return token.content.reduce(function (l, t) {\n          return l + getLength(t);\n        }, 0);\n      }\n    };\n\n    var tokens = Prism.tokenize(node.text, Prism.languages.markdown);\n    var start = 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(tokens), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var token = _step.value;\n        var length = getLength(token);\n        var end = start + length;\n\n        if (typeof token !== 'string') {\n          var _ranges$push;\n\n          ranges.push((_ranges$push = {}, _defineProperty(_ranges$push, token.type, true), _defineProperty(_ranges$push, \"anchor\", {\n            path: path,\n            offset: start\n          }), _defineProperty(_ranges$push, \"focus\", {\n            path: path,\n            offset: end\n          }), _ranges$push));\n        }\n\n        start = end;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return ranges;\n  }, []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return setValue(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Editable, {\n    decorate: decorate,\n    renderLeaf: renderLeaf,\n    placeholder: \"Send A Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nvar Leaf = function Leaf(_ref3) {\n  var attributes = _ref3.attributes,\n      children = _ref3.children,\n      leaf = _ref3.leaf;\n  console.log(leaf);\n  return __jsx(\"span\", _extends({}, attributes, {\n    className: css(_templateObject(), leaf.bold && 'bold', leaf.italic && 'italic', leaf.underlined && 'underline', leaf.title && css(_templateObject2()), leaf.list && css(_templateObject3()), leaf.hr && css(_templateObject4()), leaf.blockquote && css(_templateObject5()), leaf.code && css(_templateObject6())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), children);\n};\n\nvar initialValue = [{\n  type: 'paragraph',\n  children: [{\n    text: ''\n  }]\n}];\nexport default MarkdownPreviewExample;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Edit.tsx"],"names":["Prism","React","useState","useCallback","useMemo","Slate","Editable","withReact","Text","createEditor","withHistory","css","languages","markdown","extend","insertBefore","blockquote","pattern","alias","code","title","inside","punctuation","lookbehind","hr","list","variable","bold","italic","url","util","clone","MarkdownPreviewExample","initialValue","value","setValue","renderLeaf","props","editor","decorate","node","path","ranges","isText","getLength","token","length","content","reduce","l","t","tokens","tokenize","text","start","end","push","type","offset","Leaf","attributes","children","leaf","console","log","underlined"],"mappings":"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","sourcesContent":["import Prism from 'prismjs';\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { Text, createEditor, Element, Descendant } from 'slate';\nimport { withHistory } from 'slate-history';\nimport { css } from '@emotion/css';\n\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{});\nPrism.languages.insertBefore(\"markdown\",\"prolog\", {\n  blockquote:{\n    pattern:/^>(?:[\\t ]*>)*/m,\n    alias:\"punctuation\"\n  },\n  code:[\n    {\n      pattern:/^(?: {4}|\\t).+/m,\n      alias:\"keyword\"\n    },\n    {\n      pattern:/`\\`.+?`\\`|`[^`\\n]+`/,\n      alias: \"keyword\"\n    }\n  ],\n  title:[\n    {\n      pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n      alias:\"important\",\n      inside:{\n        punctuation:/==+$|--+$/\n      }\n    },\n    {\n      pattern:/(^\\s*)#+.+/m,\n      lookbehind:!0,\n      alias:\"important\",\n      inside:{\n        punctuation:/^#+|#+$/\n      }\n    }\n  ],\n  hr:{\n    pattern:/(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind:!0,\n    alias:\"punctuation\"\n  },\n  list:{\n    pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind:!0,\n    alias:\"punctuation\"\n  },\n  \"url-reference\":{\n    pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside:{\n      variable:{\n        pattern:/^(!?\\[)[^\\]]+/,\n        lookbehind:!0\n      },\n      'string':/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation:/^[\\[\\]!:]|[<>]/\n    },\n    alias:\"url\"\n  },\n  bold:{\n    pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind:!0,\n    inside:{\n      punctuation:/^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic:{\n    pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind:!0,\n    inside:{\n      punctuation:/^[*_]|[*_]$/\n    }\n  },\n  url:{\n    pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside:{\n      variable:{\n        pattern:/(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind:!0\n      },\n      'string':{\n        pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\nPrism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url);\nPrism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic);\nPrism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold);\n\nconst MarkdownPreviewExample = () => {\n  const [value, setValue] = useState<Descendant[]>(initialValue)\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  const decorate = useCallback(([node, path]) => {\n    const ranges = []\n\n    if (!Text.isText(node)) {\n      return ranges\n    }\n\n    const getLength = token => {\n      if (typeof token === 'string') {\n        return token.length\n      } else if (typeof token.content === 'string') {\n        return token.content.length\n      } else {\n        return token.content.reduce((l, t) => l + getLength(t), 0)\n      }\n    }\n\n    const tokens = Prism.tokenize(node.text, Prism.languages.markdown)\n    let start = 0\n\n    for (const token of tokens) {\n      const length = getLength(token)\n      const end = start + length\n\n      if (typeof token !== 'string') {\n        ranges.push({\n          [token.type]: true,\n          anchor: { path, offset: start },\n          focus: { path, offset: end },\n        })\n      }\n\n      start = end\n    }\n\n    return ranges\n  }, [])\n\n  return (\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\n      <Editable\n        decorate={decorate}\n        renderLeaf={renderLeaf}\n        placeholder=\"Send A Message\"\n      />\n    </Slate>\n  )\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  console.log(leaf);\n  return (\n    <span\n      {...attributes}\n      className={css`\n        font-weight: ${leaf.bold && 'bold'};\n        font-style: ${leaf.italic && 'italic'};\n        text-decoration: ${leaf.underlined && 'underline'};\n        ${leaf.title &&\n          css`\n            display: inline-block;\n            font-weight: bold;\n            font-size: 20px;\n            margin: 20px 0 10px 0;\n          `}\n        ${leaf.list &&\n          css`\n            padding-left: 10px;\n            font-size: 20px;\n            line-height: 10px;\n          `}\n        ${leaf.hr &&\n          css`\n            display: block;\n            text-align: center;\n            border-bottom: 2px solid #ddd;\n          `}\n        ${leaf.blockquote &&\n          css`\n            display: inline-block;\n            border-left: 2px solid #ddd;\n            padding-left: 10px;\n            color: #aaa;\n            font-style: italic;\n          `}\n        ${leaf.code &&\n          css`\n            font-family: monospace;\n            background-color: #eee;\n            padding: 3px;\n          `}\n      `}\n    >\n      {children}\n    </span>\n  )\n}\n\nconst initialValue: Descendant[] = [\n  { type: 'paragraph', children: [{ text: '' }, ] }\n];\n\nexport default MarkdownPreviewExample;"]},"metadata":{},"sourceType":"module"}