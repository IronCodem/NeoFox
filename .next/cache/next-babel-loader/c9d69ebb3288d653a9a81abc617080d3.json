{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Servers.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './../Style/Components/Servers.module.css';\nimport { firestore } from './../Scripts/Firebase'; //Modules \n\nimport Server from './Server';\n\nclass Servers extends React.Component {\n  constructor(props) {\n    super(props); // create the snapshow listener\n\n    _defineProperty(this, \"state\", void 0);\n\n    firestore.collection('Users').doc(this.props.User.uid).onSnapshot(async User => {\n      if (User.exists) {\n        let data = User.data();\n        this.console.log(data);\n      } // give them the default one later\n      // else {\n      //   // Make the user a profile with the basic server\n      //   let Server_Info = async (Server_ID)  => {\n      //     let Document = firestore.collection('Servers').doc(Server_ID);\n      //     let doc = await Document.get().catch(() => 'Banned');\n      //     return {\n      //       Name: doc && doc != 'Banned' && doc.exists ? doc.data().Name : null,\n      //       Banned: doc == 'Banned' ? true : false\n      //     }\n      //   }\n      //   let SID = 'UUw40MdRDcUxdEy00Zuo';\n      //   let Data = await Server_Info(SID, db);\n      //   if (!Data.Banned) {\n      //     db.collection('Users').doc(user.uid).set({\n      //       Servers: { [SID]: Data.Name }\n      //     }).catch(err => { console.log(err)});\n      //   }\n      // }\n\n    }, () => {}); // state\n\n    this.state = {\n      Active: '123',\n      Servers: new Map([['123', 'Testing'], ['UUw40MdRDcUxdEy00Zuo', 'Tes']])\n    };\n    this.props.Server_Select(this.state.Active, this.state.Servers.get(this.state.Active));\n  }\n\n  Change_Server(evt, child) {\n    this.setState({\n      Active: child\n    });\n    this.props.Server_Select(child, this.state.Servers.get(child));\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, (() => {\n      let Comps = [];\n\n      for (let [key, value] of this.state.Servers) {\n        Comps.push(__jsx(Server, {\n          key: key,\n          id: key,\n          Name: value,\n          Active: this.state.Active,\n          customClickEvent: this.Change_Server.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }\n\n      return Comps;\n    })(), __jsx(Server, {\n      id: this.props.User.uid,\n      Name: this.props.User.displayName,\n      Active: this.state.Active,\n      customClickEvent: this.Change_Server.bind(this),\n      Self: this.props.User.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Servers;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Servers.tsx"],"names":["React","styles","firestore","Server","Servers","Component","constructor","props","collection","doc","User","uid","onSnapshot","exists","data","console","log","state","Active","Map","Server_Select","get","Change_Server","evt","child","setState","render","Container","Comps","key","value","push","bind","displayName","photoURL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './../Style/Components/Servers.module.css';\nimport { firestore } from './../Scripts/Firebase';\n//Modules \nimport Server from './Server';\ntype MyProps = { Server_Select: Function, User: any };\ntype MyState = { Active: string, Servers: Map<string, string> };\nclass Servers extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    // create the snapshow listener\n     firestore.collection('Users').doc(this.props.User.uid).onSnapshot(async User => {\n        if (User.exists) {\n          let data = User.data();\n          this.\n          console.log(data);\n        } \n        // give them the default one later\n        // else {\n        //   // Make the user a profile with the basic server\n        //   let Server_Info = async (Server_ID)  => {\n        //     let Document = firestore.collection('Servers').doc(Server_ID);\n        //     let doc = await Document.get().catch(() => 'Banned');\n        //     return {\n        //       Name: doc && doc != 'Banned' && doc.exists ? doc.data().Name : null,\n        //       Banned: doc == 'Banned' ? true : false\n        //     }\n        //   }\n        //   let SID = 'UUw40MdRDcUxdEy00Zuo';\n        //   let Data = await Server_Info(SID, db);\n        //   if (!Data.Banned) {\n        //     db.collection('Users').doc(user.uid).set({\n        //       Servers: { [SID]: Data.Name }\n        //     }).catch(err => { console.log(err)});\n        //   }\n        // }\n      }, () => {}\n    )\n    // state\n    this.state = {\n      Active: '123',\n      Servers: new Map([\n        [ '123', 'Testing' ],\n        [ 'UUw40MdRDcUxdEy00Zuo', 'Tes' ]\n      ])\n    };\n    this.props.Server_Select(\n      this.state.Active,\n      this.state.Servers.get(this.state.Active)\n    )\n  }\n  Change_Server(evt, child) {\n    this.setState({Active: child});\n    this.props.Server_Select(\n       child,\n      this.state.Servers.get(child)\n    )\n  }\n  render() {\n    return (\n      <section className={styles.Container}>\n        {\n          (() => {\n            let Comps = [];\n            for (let [key, value] of this.state.Servers) {\n              Comps.push(\n                <Server \n                  key={key}\n                  id={key}\n                  Name={value}\n                  Active={this.state.Active}\n                  customClickEvent={this.Change_Server.bind(this)}\n                />\n              );\n            }\n            return Comps;\n          })()\n        }\n        <Server id={this.props.User.uid} Name={this.props.User.displayName} Active={this.state.Active} customClickEvent={this.Change_Server.bind(this)} Self={this.props.User.photoURL}/>\n      </section>\n    );\n  }\n}\n\nexport default Servers;"]},"metadata":{},"sourceType":"module"}