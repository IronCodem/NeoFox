{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo, useState } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport styles from './../Style/Components/Editor.module.css';\n\nvar Input = function Input() {\n  var initialState = [];\n  var editor = useMemo(function () {\n    return withReact(createEditor());\n  }, []);\n\n  var _useState = useState([{\n    type: 'paragraph',\n    children: [{\n      text: 'A line of text in a paragraph.'\n    }]\n  }]),\n      value = _useState[0],\n      setValue = _useState[1]; // <span className={styles.Editor} contentEditable=\"true\"></span>\n  // <span className={styles.Hint}>Send A Message...</span>\n\n\n  return __jsx(\"section\", {\n    className: styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Slate, {\n    className: styles.Editor,\n    editor: editor,\n    value: value,\n    onChange: function onChange(newVal) {\n      return setValue(newVal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Editable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Editor.tsx"],"names":["React","useMemo","useState","createEditor","Slate","Editable","withReact","styles","Input","initialState","editor","type","children","text","value","setValue","Container","Editor","newVal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AAEA,OAAOC,MAAP,MAAmB,yCAAnB;;AAEA,IAAIC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,MAAM,GAAGT,OAAO,CAAE;AAAA,WAAMK,SAAS,CAACH,YAAY,EAAb,CAAf;AAAA,GAAF,EAAmC,EAAnC,CAAtB;;AAFgB,kBAGUD,QAAQ,CAAC,CAAC;AAChCS,IAAAA,IAAI,EAAE,WAD0B;AAEhCC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAFsB,GAAD,CAAD,CAHlB;AAAA,MAGTC,KAHS;AAAA,MAGFC,QAHE,iBAOhB;AACA;;;AACA,SACE;AAAS,IAAA,SAAS,EAAER,MAAM,CAACS,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAET,MAAM,CAACU,MAAzB;AAAiC,IAAA,MAAM,EAAEP,MAAzC;AAAiD,IAAA,KAAK,EAAEI,KAAxD;AAA+D,IAAA,QAAQ,EAAE,kBAAAI,MAAM;AAAA,aAAIH,QAAQ,CAACG,MAAD,CAAZ;AAAA,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAhBD;;AAiBA,eAAeV,KAAf","sourcesContent":["import React, {useMemo, useState} from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\nimport styles from './../Style/Components/Editor.module.css';\n\nlet Input = () => {\n  const initialState = []\n  const editor = useMemo( () => withReact(createEditor()), [])\n  const [value, setValue] = useState([{\n      type: 'paragraph',\n      children: [{ text: 'A line of text in a paragraph.' }],\n    }])\n  // <span className={styles.Editor} contentEditable=\"true\"></span>\n  // <span className={styles.Hint}>Send A Message...</span>\n  return (\n    <section className={styles.Container}>\n      <Slate className={styles.Editor} editor={editor} value={value} onChange={newVal => setValue(newVal)}>\n        <Editable />\n      </Slate>\n    </section>\n  );\n}\nexport default Input;"]},"metadata":{},"sourceType":"module"}