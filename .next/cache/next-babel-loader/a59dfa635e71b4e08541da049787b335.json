{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react'; // import firebase\n\nimport { firebase, config } from './Scripts/Firebase';\nimport { FirebaseAuthProvider, IfFirebaseAuthed, IfFirebaseUnAuthed } from \"@react-firebase/auth\";\nconsole.log(hello);\nconst {} = hello; // Import the pages\n\nimport Main from './Main';\n\nlet Application = () => {\n  return __jsx(\"div\", {\n    className: \"Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(FirebaseAuthProvider, _extends({\n    firebase: firebase\n  }, config, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(IfFirebaseUnAuthed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, ({\n    isSignedIn,\n    user,\n    providerId\n  }) => {\n    return __jsx(\"button\", {\n      onClick: () => {\n        const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().signInWithPopup(googleAuthProvider);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Sign In with Google\");\n  }), __jsx(IfFirebaseAuthed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, ({\n    isSignedIn,\n    user,\n    providerId\n  }) => {\n    return __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default Application;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/index.tsx"],"names":["React","firebase","config","FirebaseAuthProvider","IfFirebaseAuthed","IfFirebaseUnAuthed","console","log","hello","Main","Application","isSignedIn","user","providerId","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,oBAAjC;AACA,SAAQC,oBAAR,EACEC,gBADF,EAEEC,kBAFF,QAE2B,sBAF3B;AAGAC,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,MAAM,KAEFA,KAFJ,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAIC,WAAW,GAAG,MAAM;AACtB,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAET;AAAhC,KAA8CC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAAD,KAAsC;AACrC,WACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMC,kBAAkB,GAAG,IAAIb,QAAQ,CAACc,IAAT,CAAcC,kBAAlB,EAA3B;AACAf,QAAAA,QAAQ,CAACc,IAAT,GAAgBE,eAAhB,CAAgCH,kBAAhC;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAUD,GAZH,CADF,EAeE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEH,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAAD,KAAsC;AACrC,WAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHH,CAfF,CADF,CADF;AAyBD,CA1BD;;AA4BA,eAAeH,WAAf","sourcesContent":["import React from 'react';\n// import firebase\nimport { firebase, config } from './Scripts/Firebase';\nimport {FirebaseAuthProvider,\n  IfFirebaseAuthed,\n  IfFirebaseUnAuthed} from \"@react-firebase/auth\";\nconsole.log(hello);\nconst {\n  \n} = hello;\n// Import the pages\nimport Main from './Main';\n\nlet Application = () => {\n  return (\n    <div className=\"Page\">\n      <FirebaseAuthProvider firebase={firebase} {...config}>\n        <IfFirebaseUnAuthed>\n          {({ isSignedIn, user, providerId }) => {\n            return (\n              <button\n                onClick={() => {\n                  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n                  firebase.auth().signInWithPopup(googleAuthProvider);\n                }}\n              >\n                Sign In with Google\n              </button>\n            )\n          }}\n        </IfFirebaseUnAuthed>\n        <IfFirebaseAuthed>\n          {({ isSignedIn, user, providerId }) => {\n            return <Main />\n          }}\n        </IfFirebaseAuthed>\n      </FirebaseAuthProvider>\n    </div>\n  );\n}\n\nexport default Application;"]},"metadata":{},"sourceType":"module"}