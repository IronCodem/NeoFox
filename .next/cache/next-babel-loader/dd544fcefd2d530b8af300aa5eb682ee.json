{"ast":null,"code":"var _jsxFileName = \"/home/runner/Chatter-React/pages/Main.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from './Style/Main.module.css'; // Components\n\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", void 0);\n\n    this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    };\n  }\n\n  Change_Server(id, name) {\n    this.setState({\n      Active: {\n        Name: name,\n        SID: id\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Servers, {\n      Server_Select: this.Change_Server.bind(this),\n      User: this.props.User,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), (() => {\n      if (this.state.Active.SID) {\n        return __jsx(React.Fragment, null, __jsx(Channels, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), __jsx(Content, {\n          Active: this.state.Active,\n          User: this.props.User,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n    })());\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Main.tsx"],"names":["React","styles","Servers","Channels","Content","Main","Component","constructor","props","state","Active","Name","SID","Change_Server","id","name","setState","render","Container","bind","User"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAIA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAqD;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AADG,KAAb;AAMD;;AACDC,EAAAA,aAAa,CAACC,EAAD,EAAKC,IAAL,EAAW;AACtB,SAAKC,QAAL,CAAc;AACZN,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEI,IADA;AAENH,QAAAA,GAAG,EAAEE;AAFC;AADI,KAAd;AAMD;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,aAAa,EAAE,KAAKL,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAAxB;AAAuD,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGI,CAAC,MAAM;AACL,UAAI,KAAKX,KAAL,CAAWC,MAAX,CAAkBE,GAAtB,EAA2B;AACzB,eACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,OAAD;AAAS,UAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAA5B;AAAoC,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWY,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAMD;AACF,KATD,GAHJ,CADF;AAiBD;;AArCkD;;AAwCrD,eAAef,IAAf","sourcesContent":["import React from 'react';\n\nimport styles from './Style/Main.module.css';\n\n// Components\nimport Servers from './Components/Servers';\nimport Channels from './Components/Channels';\nimport Content from './Components/Content';\n\ntype MyProps = { User: any };\ntype MyState = { Active: { Name: string, SID: string } };\nclass Main extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      Active: {\n        Name: '',\n        SID: '0'\n      }\n    }\n  }\n  Change_Server(id, name) {\n    this.setState({\n      Active: {\n        Name: name,\n        SID: id\n      }\n    });\n  }\n  render() {\n    return (\n      <div className={styles.Container}>\n        <Servers Server_Select={this.Change_Server.bind(this)} User={this.props.User} />\n        {\n          (() => {\n            if (this.state.Active.SID) {\n              return (\n                <>\n                  <Channels />\n                  <Content Active={this.state.Active} User={this.props.User} />\n                </>\n              );\n            }\n          })()\n        }\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}