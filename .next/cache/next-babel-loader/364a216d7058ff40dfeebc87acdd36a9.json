{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/runner/Chatter-React/pages/Components/Servers.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './../Style/Components/Servers.module.css'; //Modules \n\nvar Servers = /*#__PURE__*/function (_React$Component) {\n  _inherits(Servers, _React$Component);\n\n  function Servers(props) {\n    var _this;\n\n    _classCallCheck(this, Servers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Servers).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n\n    _this.state = {\n      Active: 123,\n      Servers: new _Map([[123, 'Testing']])\n    };\n    return _this;\n  }\n\n  _createClass(Servers, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"section\", {\n        className: styles.Container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, function () {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(_this2.state.Servers), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                key = _step$value[0],\n                value = _step$value[1];\n\n            console.log(key, value);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return Servers;\n}(React.Component);\n\nexport default Servers;","map":{"version":3,"sources":["/home/runner/Chatter-React/pages/Components/Servers.tsx"],"names":["React","styles","Servers","props","state","Active","Container","key","value","console","log","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0CAAnB,C,CAEA;;IAKMC,O;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,GADG;AAEXH,MAAAA,OAAO,EAAE,SAAQ,CACf,CAAE,GAAF,EAAO,SAAP,CADe,CAAR;AAFE,KAAb;AAFiB;AAQlB;;;;6BACQ;AAAA;;AACP,aACE;AAAS,QAAA,SAAS,EAAED,MAAM,CAACK,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,YAAM;AAAA;AAAA;AAAA;;AAAA;AAEL,4CAAyB,MAAI,CAACF,KAAL,CAAWF,OAApC,4GAA6C;AAAA;AAAA,gBAAnCK,GAAmC;AAAA,gBAA9BC,KAA8B;;AAC3CC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBC,KAAjB;AACD;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKN,OAPL,CADF;AAYD;;;;EAxBmBR,KAAK,CAACW,S;;AA2B5B,eAAeT,OAAf","sourcesContent":["import React from 'react';\n\nimport styles from './../Style/Components/Servers.module.css';\n\n//Modules \nimport Server from './Server';\n\ntype MyProps = { };\ntype MyState = { Active: number, Servers: Map<number, string> };\nclass Servers extends React.Component<MyProps, MyState> {\n  public state: MyState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      Active: 123,\n      Servers: new Map([\n        [ 123, 'Testing' ]\n      ]) \n    };\n  }\n  render() {\n    return (\n      <section className={styles.Container}>\n        {\n          (() => {\n            \n            for (let [key, value] of this.state.Servers) {\n              console.log(key, value);\n            }\n          })\n        }\n      </section>\n    );\n  }\n}\n\nexport default Servers;"]},"metadata":{},"sourceType":"module"}